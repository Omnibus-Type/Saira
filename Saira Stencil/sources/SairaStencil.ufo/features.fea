# automatic
@Uppercase = [ A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex Hdotbelow I IJ Iacute Ibreve Icaron Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Eng Nhookleft Nj Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent Tdotbelow U Uacute Ubreve Ucaron Ucircumflex Udblgrave Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent Yacute.loclGUA Ycircumflex.loclGUA Ydieresis.loclGUA Ygrave.loclGUA Ymacron.loclGUA Ytilde.loclGUA Cacute.loclPLK Nacute.loclPLK Oacute.loclPLK Sacute.loclPLK Zacute.loclPLK A.salt Aacute.salt Abreve.salt Abreveacute.salt Abrevedotbelow.salt Abrevegrave.salt Abrevehookabove.salt Abrevetilde.salt Acaron.salt Acircumflex.salt Acircumflexacute.salt Acircumflexdotbelow.salt Acircumflexgrave.salt Acircumflexhookabove.salt Acircumflextilde.salt Adblgrave.salt Adieresis.salt Adotbelow.salt Agrave.salt Ahookabove.salt Ainvertedbreve.salt Amacron.salt Aogonek.salt Aring.salt Aringacute.salt Atilde.salt G.salt Gbreve.salt Gcaron.salt Gcircumflex.salt Gcommaaccent.salt Gdotaccent.salt R.salt Racute.salt Rcaron.salt Rcommaaccent.salt Rdblgrave.salt Rinvertedbreve.salt Delta Omega ];

@figures = [ zero
one
two
three
four
five
six
seven
eight
nine ];

@dnom = [ zero.dnom
one.dnom
two.dnom
three.dnom
four.dnom
five.dnom
six.dnom
seven.dnom
eight.dnom
nine.dnom ];

@numr = [ zero.numr
one.numr
two.numr
three.numr
four.numr
five.numr
six.numr
seven.numr
eight.numr
nine.numr ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem latn TRK;
languagesystem latn AZE;
languagesystem latn GUA;
languagesystem latn CRT;
languagesystem latn TAT;
languagesystem latn CAT;
languagesystem latn KAZ;
languagesystem latn MOL;
languagesystem latn ROM;
languagesystem latn PLK;

feature aalt {
# automatic
feature ccmp;
feature locl;
feature subs;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature lnum;
feature pnum;
feature onum;
feature case;
feature zero;
feature salt;
feature lnum;
feature tnum;
} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaabovecomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb slashlongcomb slashshortcomb strokelongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb dieresiscomb_gravecomb dieresiscomb_acutecomb dieresiscomb_caroncomb dieresiscomb_macroncomb dotaccentcomb dotaccentcomb_macroncomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb ringcomb_acutecomb tildecomb tildecomb_macroncomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb commaturnedabovecomb horncomb dotbelowcomb dieresisbelowcomb commaaccentcomb cedillacomb ogonekcomb brevebelowcomb macronbelowcomb slashshortcomb slashlongcomb acute breve caron circumflex dieresis dotaccent grave hungarumlaut acute.loclPLK macron ring tilde brevecomb_acutecomb brevecomb_gravecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_tildecomb];
	@MarkscombCase = [dieresiscomb.case dieresiscomb_gravecomb.case dieresiscomb_acutecomb.case dieresiscomb_caroncomb.case dieresiscomb_macroncomb.case dotaccentcomb.case dotaccentcomb_macroncomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case ringcomb_acutecomb.case tildecomb.case tildecomb_macroncomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case commaturnedabovecomb.case horncomb.case dotbelowcomb.case dieresisbelowcomb.case commaaccentcomb.case cedillacomb.case ogonekcomb.case brevebelowcomb.case macronbelowcomb.case slashshortcomb.case slashlongcomb.case acute.case breve.case caron.case circumflex.case dieresis.case dotaccent.case grave.case hungarumlaut.case acute.loclPLK.case macron.case ring.case tilde.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_tildecomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_Other_3 {
	lookupflag 0;
	sub dieresiscomb acutecomb by dieresiscomb_acutecomb;
	sub dieresiscomb.case acutecomb.case by dieresiscomb_acutecomb.case;
	sub dieresiscomb caroncomb by dieresiscomb_caroncomb;
	sub dieresiscomb.case caroncomb.case by dieresiscomb_caroncomb.case;
	sub dieresiscomb gravecomb by dieresiscomb_gravecomb;
	sub dieresiscomb.case gravecomb.case by dieresiscomb_gravecomb.case;
	sub dieresiscomb macroncomb by dieresiscomb_macroncomb;
	sub dieresiscomb.case macroncomb.case by dieresiscomb_macroncomb.case;
	sub dotaccentcomb macroncomb by dotaccentcomb_macroncomb;
	sub dotaccentcomb.case macroncomb.case by dotaccentcomb_macroncomb.case;
	sub ringcomb acutecomb by ringcomb_acutecomb;
	sub ringcomb.case acutecomb.case by ringcomb_acutecomb.case;
	sub tildecomb macroncomb by tildecomb_macroncomb;
	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;
} ccmp_Other_3;

lookup ccmp_Other_4 {
	lookupflag 0;
	sub dieresiscomb acutecomb by dieresiscomb_acutecomb;
	sub dieresiscomb.case acutecomb.case by dieresiscomb_acutecomb.case;
	sub dieresiscomb caroncomb by dieresiscomb_caroncomb;
	sub dieresiscomb.case caroncomb.case by dieresiscomb_caroncomb.case;
	sub dieresiscomb gravecomb by dieresiscomb_gravecomb;
	sub dieresiscomb.case gravecomb.case by dieresiscomb_gravecomb.case;
	sub dieresiscomb macroncomb by dieresiscomb_macroncomb;
	sub dieresiscomb.case macroncomb.case by dieresiscomb_macroncomb.case;
	sub dotaccentcomb macroncomb by dotaccentcomb_macroncomb;
	sub dotaccentcomb.case macroncomb.case by dotaccentcomb_macroncomb.case;
	sub ringcomb acutecomb by ringcomb_acutecomb;
	sub ringcomb.case acutecomb.case by ringcomb_acutecomb.case;
	sub tildecomb macroncomb by tildecomb_macroncomb;
	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;
} ccmp_Other_4;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;
} ccmp_latn_1;

lookup ccmp_latn_2 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;
} ccmp_latn_2;

script latn;
} ccmp;

feature locl {
# automatic
script latn;
language TRK;
sub i by idotaccent;
language AZE;
sub i by idotaccent;
language GUA;
sub Yacute by Yacute.loclGUA;
sub Ycircumflex by Ycircumflex.loclGUA;
sub Ydieresis by Ydieresis.loclGUA;
sub Ygrave by Ygrave.loclGUA;
sub Ymacron by Ymacron.loclGUA;
sub Ytilde by Ytilde.loclGUA;
sub yacute by yacute.loclGUA;
sub ycircumflex by ycircumflex.loclGUA;
sub ydieresis by ydieresis.loclGUA;
sub ygrave by ygrave.loclGUA;
sub ymacron by ymacron.loclGUA;
sub ytilde by ytilde.loclGUA;
language CRT;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language CAT;
sub l periodcentered' l by periodcentered.loclCAT;
sub L periodcentered' L by periodcentered.loclCAT.case;
language KAZ;
sub i by idotaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language PLK;
sub Cacute by Cacute.loclPLK;
sub Nacute by Nacute.loclPLK;
sub Oacute by Oacute.loclPLK;
sub Sacute by Sacute.loclPLK;
sub Zacute by Zacute.loclPLK;
sub cacute by cacute.loclPLK;
sub nacute by nacute.loclPLK;
sub oacute by oacute.loclPLK;
sub sacute by sacute.loclPLK;
sub zacute by zacute.loclPLK;
sub acute by acute.loclPLK;
} locl;

feature subs {
# automatic
sub n by ninferior;
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
} subs;

feature sups {
# automatic
sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
} sups;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
} numr;

feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
} dnom;

feature frac {
lookup FractionBar {
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures @figures slash;
	ignore sub slash @figures @figures @figures slash';
	ignore sub slash' @figures @figures @figures slash;
	ignore sub slash @figures @figures slash';
	ignore sub slash' @figures @figures slash;
	ignore sub slash @figures slash';
	ignore sub slash' @figures slash;
	sub @figures slash' @figures by fraction;
} FractionBar;

lookup Numerator1 {
	sub @figures' fraction by @numr;
} Numerator1;

lookup Numerator2 {
	sub @figures' @numr fraction by @numr;
} Numerator2;

lookup Numerator3 {
	sub @figures' @numr @numr fraction by @numr;
} Numerator3;

lookup Numerator4 {
	sub @figures' @numr @numr @numr fraction by @numr;
} Numerator4;

lookup Numerator5 {
	sub @figures' @numr @numr @numr @numr fraction by @numr;
} Numerator5;

lookup Numerator6 {
	sub @figures' @numr @numr @numr @numr @numr fraction by @numr;
} Numerator6;

lookup Numerator7 {
	sub @figures' @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator7;

lookup Numerator8 {
	sub @figures' @numr @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator8;

lookup Numerator9 {
	sub @figures' @numr @numr @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator9;

lookup Numerator10 {
	sub @figures' @numr @numr @numr @numr @numr @numr @numr @numr @numr fraction by @numr;
} Numerator10;

lookup Denominator {
	sub [fraction @dnom] @figures' by @dnom;
} Denominator;

sub @figures space' @numr by thinspace;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
} ordn;

feature lnum {
# automatic
sub zero.osf by zero;
sub one.osf by one;
sub two.osf by two;
sub three.osf by three;
sub four.osf by four;
sub five.osf by five;
sub six.osf by six;
sub seven.osf by seven;
sub eight.osf by eight;
sub nine.osf by nine;
} lnum;

feature pnum {
# automatic
sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
sub zero.tosf by zero.osf;
sub one.tosf by one.osf;
sub two.tosf by two.osf;
sub three.tosf by three.osf;
sub four.tosf by four.osf;
sub five.tosf by five.osf;
sub six.tosf by six.osf;
sub seven.tosf by seven.osf;
sub eight.tosf by eight.osf;
sub nine.tosf by nine.osf;
} pnum;

feature onum {
# automatic
sub zero.tf by zero.tosf;
sub one.tf by one.tosf;
sub two.tf by two.tosf;
sub three.tf by three.tosf;
sub four.tf by four.tosf;
sub five.tf by five.tosf;
sub six.tf by six.tosf;
sub seven.tf by seven.tosf;
sub eight.tf by eight.tosf;
sub nine.tf by nine.tosf;
sub zero by zero.osf;
sub one by one.osf;
sub two by two.osf;
sub three by three.osf;
sub four by four.osf;
sub five by five.osf;
sub six by six.osf;
sub seven by seven.osf;
sub eight by eight.osf;
sub nine by nine.osf;
} onum;

feature case {
# automatic
sub exclam by exclam.case;
sub exclamdown by exclamdown.case;
sub question by question.case;
sub questiondown by questiondown.case;
sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub hyphen by hyphen.case;
sub softhyphen by softhyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub nonbreakinghyphen by nonbreakinghyphen.case;
sub dieresiscomb by dieresiscomb.case;
sub dieresiscomb_gravecomb by dieresiscomb_gravecomb.case;
sub dieresiscomb_acutecomb by dieresiscomb_acutecomb.case;
sub dieresiscomb_caroncomb by dieresiscomb_caroncomb.case;
sub dieresiscomb_macroncomb by dieresiscomb_macroncomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub dotaccentcomb_macroncomb by dotaccentcomb_macroncomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub ringcomb_acutecomb by ringcomb_acutecomb.case;
sub tildecomb by tildecomb.case;
sub tildecomb_macroncomb by tildecomb_macroncomb.case;
sub macroncomb by macroncomb.case;
sub hookabovecomb by hookabovecomb.case;
sub dblgravecomb by dblgravecomb.case;
sub breveinvertedcomb by breveinvertedcomb.case;
sub commaturnedabovecomb by commaturnedabovecomb.case;
sub horncomb by horncomb.case;
sub dotbelowcomb by dotbelowcomb.case;
sub dieresisbelowcomb by dieresisbelowcomb.case;
sub commaaccentcomb by commaaccentcomb.case;
sub cedillacomb by cedillacomb.case;
sub ogonekcomb by ogonekcomb.case;
sub brevebelowcomb by brevebelowcomb.case;
sub macronbelowcomb by macronbelowcomb.case;
sub slashshortcomb by slashshortcomb.case;
sub slashlongcomb by slashlongcomb.case;
sub acute by acute.case;
sub breve by breve.case;
sub caron by caron.case;
sub circumflex by circumflex.case;
sub dieresis by dieresis.case;
sub dotaccent by dotaccent.case;
sub grave by grave.case;
sub hungarumlaut by hungarumlaut.case;
sub acute.loclPLK by acute.loclPLK.case;
sub macron by macron.case;
sub ring by ring.case;
sub tilde by tilde.case;
sub brevecomb_acutecomb by brevecomb_acutecomb.case;
sub brevecomb_gravecomb by brevecomb_gravecomb.case;
sub brevecomb_tildecomb by brevecomb_tildecomb.case;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;
sub breveinverted by breveinverted.case;
sub breveacute by breveacute.case;
sub brevegrave by brevegrave.case;
sub brevehook by brevehook.case;
sub brevetilde by brevetilde.case;
sub circumflexacute by circumflexacute.case;
sub circumflexgrave by circumflexgrave.case;
sub circumflexhook by circumflexhook.case;
sub circumflextilde by circumflextilde.case;
sub dblgrave by dblgrave.case;
sub dieresisacute by dieresisacute.case;
sub dieresiscaron by dieresiscaron.case;
sub dieresisgrave by dieresisgrave.case;
sub dieresismacron by dieresismacron.case;
sub dotaccentmacron by dotaccentmacron.case;
sub hook by hook.case;
sub ringacute by ringacute.case;
sub tildemacron by tildemacron.case;
sub zero.osf by zero.lf;
sub one.osf by one.lf;
sub two.osf by two.lf;
sub three.osf by three.lf;
sub four.osf by four.lf;
sub five.osf by five.lf;
sub six.osf by six.lf;
sub seven.osf by seven.lf;
sub eight.osf by eight.lf;
sub nine.osf by nine.lf;
sub zero.tf by zero.lf;
sub one.tf by one.lf;
sub two.tf by two.lf;
sub three.tf by three.lf;
sub four.tf by four.lf;
sub five.tf by five.lf;
sub six.tf by six.lf;
sub seven.tf by seven.lf;
sub eight.tf by eight.lf;
sub nine.tf by nine.lf;
sub zero.tosf by zero.lf;
sub one.tosf by one.lf;
sub two.tosf by two.lf;
sub three.tosf by three.lf;
sub four.tosf by four.lf;
sub five.tosf by five.lf;
sub six.tosf by six.lf;
sub seven.tosf by seven.lf;
sub eight.tosf by eight.lf;
sub nine.tosf by nine.lf;
} case;

feature liga {
# automatic
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
} liga;

feature zero {
sub zero by zero.zero;
sub zero.osf by zero.zero;
sub zero.tf by zero.tf.zero;
} zero;

feature salt {
sub A by A.salt;
sub Aacute by Aacute.salt;
sub Abreve by Abreve.salt;
sub Abreveacute by Abreveacute.salt;
sub Abrevegrave by Abrevegrave.salt;
sub Abrevehookabove by Abrevehookabove.salt;
sub Abrevetilde by Abrevetilde.salt;
sub Abrevedotbelow by Abrevedotbelow.salt;
sub Ainvertedbreve by Ainvertedbreve.salt;
sub Acaron by Acaron.salt;
sub Acircumflex by Acircumflex.salt;
sub Acircumflexacute by Acircumflexacute.salt;
sub Acircumflexgrave by Acircumflexgrave.salt;
sub Acircumflexhookabove by Acircumflexhookabove.salt;
sub Acircumflextilde by Acircumflextilde.salt;
sub Acircumflexdotbelow by Acircumflexdotbelow.salt;
sub Adieresis by Adieresis.salt;
sub Adotbelow by Adotbelow.salt;
sub Agrave by Agrave.salt;
sub Adblgrave by Adblgrave.salt;
sub Ahookabove by Ahookabove.salt;
sub Amacron by Amacron.salt;
sub Aogonek by Aogonek.salt;
sub Aring by Aring.salt;
sub Aringacute by Aringacute.salt;
sub Atilde by Atilde.salt;
sub G by G.salt;
sub Gbreve by Gbreve.salt;
sub Gcaron by Gcaron.salt;
sub Gcommaaccent by Gcommaaccent.salt;
sub Gcircumflex by Gcircumflex.salt;
sub Gdotaccent by Gdotaccent.salt;
sub R by R.salt;
sub Racute by Racute.salt;
sub Rcaron by Rcaron.salt;
sub Rcommaaccent by Rcommaaccent.salt;
sub Rdblgrave by Rdblgrave.salt;
sub Rinvertedbreve by Rinvertedbreve.salt;
sub four by four.salt;
sub six by six.salt;
sub nine by nine.salt;
} salt;

feature lnum {
sub zero.osf by zero;
sub one.osf by one;
sub two.osf by two;
sub three.osf by three;
sub four.osf by four;
sub five.osf by five;
sub six.osf by six;
sub seven.osf by seven;
sub eight.osf by eight;
sub nine.osf by nine;
} lnum;

feature tnum {
sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
sub zero.osf by zero.tosf;
sub one.osf by one.tosf;
sub two.osf by two.tosf;
sub three.osf by three.tosf;
sub four.osf by four.tosf;
sub five.osf by five.tosf;
sub six.osf by six.tosf;
sub seven.osf by seven.tosf;
sub eight.osf by eight.tosf;
sub nine.osf by nine.tosf;
} tnum;

